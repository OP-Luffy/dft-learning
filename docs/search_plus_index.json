{"./":{"url":"./","title":"Introduction","keywords":"","body":"不完全不准确不系统的计算模拟入坑记录 本文档是一个菜鸡的上课笔记。 课程为学不会系列之《能源环境材料计算模拟方法》，授课教师四川大学建筑与环境学院岑望来老师。 教学大纲（上拉一点点的左上角汉堡菜单可以查看文档大纲。）： 绪论（3学时）：介绍计算模拟方法在能源环境材料研究与开发中的应用情况，理论与方法体系，课程安排和考核办法，Windows系统下个人电脑计算模拟软件安装与调试。 Linux操作系统基础（6学时）：服务器系统结构，权限，用户管理，文件管理；vi编辑器使用方法。 Materials Studio软件使用基础（6学时）：Materials Studio软件介绍及其Visualizer模块的使用方法；CASTEP模块使用方法；分别以O2 分子和NaCl晶体结构优化为例作操作练习。 VASP软件基础（6学时）：VASP软件介绍，分别以O2分子和NaCl晶体结构优化为例作操作练习。 结构化学基础（3学时）：介绍点群、晶体对称性、晶面和倒空间；介绍原子和分子电子结构；用Materials Studio做晶面建模练习。 电子结构理论及计算方法（12学时）：自洽场理论、能带理论、态密度、电荷密度；自旋电荷密度分析，电荷密度差分析，静电势分析，Bader 电荷分析，态密度，能带结构；实践操作。 反应路径与分子动力学计算方法（9学时）：NEB计算方法与操作实践；系综理论，控温方法，输入文件准备，计算过程，结果分析。 计算模拟高级工具（9学时）：Shell, Python编程基础, 原子模拟环境ASE基础 同为初学者，水平有限，如有错误还请指出。 Bug/typo/error reports should be sent to: Zhang' email or reported as an issue. 菜鸡小张，2020年。 "},"01-Theory/How-to-Start.html":{"url":"01-Theory/How-to-Start.html","title":"入门材料计算","keywords":"","body":"关于材料计算 啊这...我也不知道啊... 插播一个我觉得还不错的视频 谈谈理论计算如何入门（上） | BV1z7411f7ra ，UP是刘锦程博士： "},"01-Theory/DFT.html":{"url":"01-Theory/DFT.html","title":"第1章 第一性原理","keywords":"","body":"第一性原理与密度泛函理论 不写了，反正写了也看不懂 — — ! "},"01-Theory/unfinished.html":{"url":"01-Theory/unfinished.html","title":"第5章 物质结构","keywords":"","body":"还没写 "},"02-Install/Windows-platform.html":{"url":"02-Install/Windows-platform.html","title":"Windows平台里的相关软件","keywords":"","body":"Windows 平台下需要安装的软件 一些可能会用到的软件： Software Name Description Comment XShell 官网找教育版 XFTP 同上 Xming / XManager Materials Studio VESTA Python ASE 一个好的文本编辑器 "},"02-install/windows-python.html":{"url":"02-install/windows-python.html","title":"Python","keywords":"","body":"还没写 话说感觉这玩意没必要写 "},"02-Install/windows-ase-install.html":{"url":"02-Install/windows-ase-install.html","title":"ase","keywords":"","body":"安装ASE Requirements Python 3.6 or newer NumPy 1.11 or newer (base N-dimensional array package) SciPy 0.18 or newer (library for scientific computing) Optional but strongly recommended: Matplotlib 2.0.0 or newer for plotting tkinter for ase.gui Optional: Flask for ase.db web-interface pytest 3.6.1 or newer for running tests pytest-xdist 1.22.1 or newer for running tests in parallel spglib for certain symmetry-related features 1.安装并配置Python环境 2. 安装ASE pip install --upgrade --user ase 3. 添加环境变量 将以下添加到PATH %AppData%\\Roaming\\Python\\Python38\\Scripts 该变量可能不一样，需要自行确定 参考文献 https://wiki.fysik.dtu.dk/ase/install.html#installation-using-pip 在Windows 10 20H2 版本上，ASE可能报错，可能是由于numpy与Windows 20H2不兼容导致，参考 numpy-in-win20H2.md 。 "},"02-Install/linux-platform.html":{"url":"02-Install/linux-platform.html","title":"Linux里的相关软件","keywords":"","body":"这是一些在Linux上可能用得到的软件 Software Name Description Comment VASP 集群管理员已编译 VTST 集群管理员已编译 VASPKIT 见 install-vaspkit.md VTST-Script 见 linux-install-VTSTScript.md Python Irzsz 见 linux-lrzsz-install.md gunplot 见 linux-gunplot-install.md "},"02-Install/linux-install-vaspkit.html":{"url":"02-Install/linux-install-vaspkit.html","title":"VaspKit","keywords":"","body":"Include Page： install-vaspkit.md There will be some errors in the display of the included page, please check the original address above first. VASPKIT的配置 推荐视频 VASPKIT功能介绍，解放你的双手 ： 我们预计将VASPKIT安装在~/app/下，在用户目录下新建一个app文件夹并进入： cd ~ mkdir app cd app 下载 你可以将其下载到自己的电脑上后再上传到服务器，也可以直接在服务器上下载。以下两种下载方式二选一即可。 方式一（Recommend） # VASPKIT软件的包 $ wget https://nchc.dl.sourceforge.net/project/vaspkit/Binaries/vaspkit.1.2.1.linux.x64.tar.gz # 赝势文件的包 $ wget https://github.com/northword/Computation-Simulation/raw/main/app/pot.tgz 下载成功即如图： 方式二 官方下载地址：https://sourceforge.net/projects/vaspkit/files/Binaries/ 下载后使用FTP上传到服务器。 解压缩 tar -xzvf vaspkit.1.2.1.linux.x64.tar.gz tar -xzvf pot.tgz rm vaspkit.1.2.1.linux.x64.tar.gz pot.tar vtstscripts.tar tar命令用法见 linux-command.md 配置VASPKIT程序的环境变量 首先配置VASPKIT软件的变量。将软件自带的环境变量模板文件复制到用户目录，并编辑 cp -f how_to_set_environment_variable ~/.vaspkit vi ~/.vaspkit 打开后如下： # cp how_to_set_environment_variable ~/.vaspkit and modify the ~/.vaspkit file based on your settings! VASP5 .TRUE. # .TRUE. or .FALSE.; Set .FALSE. if you are using vasp.4.x LDA_PATH ~/POTCAR/LDA # Path of LDA potential. PBE_PATH ~/POTCAR/PBE # Path of PBE potential. GGA_PATH ~/POTCAR/GGA # Path of PW91 potential. POTCAR_TYPE PBE # PBE, PW91 or LDA; Set PBE if you want to make PBE-POTCAR file GW_POTCAR .FALSE. # .TRUE. or .FALSE.; For example, H_GW, O_GW will be chose when POTCAR_GW = .TRUE. RECOMMENDED_POTCAR .TRUE. # .TRUE. or .FALSE.; The recommended PAW potential will be chose when RECOMMENDED_POTCAR = .TRUE. SET_FERMI_ENERGY_ZERO .TRUE. # .TRUE. or .FALSE.; The Fermi Energy will be set to zero eV when SET_FERMI_ENERGY_ZERO = .TRUE. MINI_INCAR .FALSE. # .TRUE. or .FALSE.; A simplified INCAR will be written when MINI_INCAR = .TRUE. USER_DEFINED_INCAR .FALSE. # .TRUE. or .FALSE.; whether to use embedded INCAR templates or user defined INCAR templates WRITE_SELECTIVE_DYNAMICS .FALSE. # .TRUE. or .FALSE.; whether the selective dymanics set will be forced to write when SET_SELECTIVE_DYNAMICS_MODE = .FALSE. PYTHON_BIN ~/anaconda3/bin/python3 # Python executable program with its installation path. I recommend you install anaconda package for Python data science PLOT_MATPLOTLIB .FALSE. # .TRUE. or .FALSE.; Set .TRUE. if you want to generate Graphs. (Matplotlib and Numpy packages MUST be embedded in Python) VASPKIT_UTILITIES_PATH ~/vaspkit/utilities # IF ADVANCED_USER is .TRUE., set VASPKIT_UTILITIES_PATH like ~/vaspkit.0.72/utilities in order to use scripts in it. ADVANCED_USER .TRUE. # .TRUE. or .FALSE.; Please fill in your settings in the block 'USER_DEFINED' if you want vaspkit to integrate your own scripts in the 'UTILITIES' file. SET_INCAR_WRITE_MODE OVERRIDE # OVERRIDE, APPEND, BACK-UP-OLD,BACK-UP-NEW; \"Customize INCAR File\" whether to override existing INCAR/appending existing INCAR/backup existing INCAR to INCAR.old && write into INCAR/write into INCAR.new PHS_CORRECTION .FALSE. # .TRUE. or .FALSE.; whether to make PHS correction during linear optical calculations. More details on this correction are given in Comput. Mater. Sci. 172 (2020) 109315. # Reset the default values of variables in here SYMPREC 1E-5 # Distance tolerance in Cartesian coordinates to find crystal symmetry (default value: 1E-5) EMIN -20.0 # Minimum energy for evaluation of DOS (default value: -20.0 eV) EMAX 20.0 # Maximum energy for evaluation of DOS (default value: 20.0 eV) NEDOS 2001 # Number of grid points in DOS (default value: 2001) GAMMA_CENTERED .TRUE. # .TRUE. or .FALSE.; (default value: .TRUE.) VACUUM_THICKNESS 15.0 # The thickness of vacuum to build slab or 2D materials (default value: 10 angstrom) CENTER_SLAB .TRUE. # Center the slab in the z direction; (default value: .TRUE.) 通常需要修改的是3、4行，将其修改为你的赝势文件的路径，按照本文档操作下来的，应该修改为： LDA_PATH ~/app/pot_database/LDA # Path of LDA potential. PBE_PATH ~/app/pot_database/PBE # Path of PBE potential. 将vaspkit关键字加入系统环境变量 接下来，要把vaspkit这个关键词添加到系统的环境变量里。由于新版本(version>0.73)给了方便的配置脚本，我们直接运行， $ bash setup.sh $ source ~/.bashrc 其中第一行作用为将export PATH=[你的VASPKIT目录]/bin/:$PATH添加到了~/.bashrc，第二行作用为使环境变量立即生效。 当然，也可以去vi ~/.bashrc，将路径添加到PATH。 至此，环境变量配置完成，我们可以通过vaspkit命令来启动它。 [zjb@op backup]$ vaspkit \\\\\\/// / _ _ \\ Hey, you must know what you are doing. (| (.)(.) |) Otherwise you might get wrong results! +-----.OOOo--()--oOOO.------------------------------------------+ | VASPKIT Version: 1.12 (01 Mar. 2020) | | Core Developer: Vei WANG (wangvei@icloud.com) | | Main Contributors: Nan XU, Jin-Cheng LIU & Gang TANG | | Please send Bugs and Suggestions to vaspkit@gmail.com | +-----.oooO-----------------------------------------------------+ ( ) Oooo. \\ ( ( ) \\_) ) / (_/ ===================== Structural Options ======================== 1) VASP Input Files Generator 2) Elastic-Properties 3) K-Path Generator 4) Structure Editor 5) Catalysis-ElectroChem Kit 6) Symmetry Search ===================== Electronic Options ======================== 11) Density-of-States 21) DFT Band-Structure 23) 3D Band-Structure 25) Hybrid-DFT Band-Structure 26) Fermi-Surface 28) Band-Structure Unfolding =========== Charge & Potential & Wavefunction Options =========== 31) Charge & Spin Density 42) Potential-Related 51) Wave-Function Analysis ====================== Misc Utilities =========================== 71) Optical-Properties 72) Molecular-Dynamics Kit 73) VASP2other Interface 74) USER interface 91) Semiconductor Calculator 92) 2D-Materials Kit 0) Quit ------------>> "},"02-Install/linux-install-VTSTScript.html":{"url":"02-Install/linux-install-VTSTScript.html","title":"VTST Script","keywords":"","body":"配置VTST的脚本 下载 cd ~/app $ wget https://github.com/northword/Computation-Simulation/raw/main/app/vtstscripts.tgz 解压缩 tar -xzvf vtstscripts.tgz & rm vtstscripts.tar cd vtstscripts-933 pwd # 将返回值复制 加入bashrc vi ~/.bashrc # 将上面pwd的返回值加入PATH "},"02-install/linux-gnuplot-install.html":{"url":"02-install/linux-gnuplot-install.html","title":"gnuplot","keywords":"","body":"使用默认GCC编译gnuplot cd /tmp wget https://jaist.dl.sourceforge.net/project/gnuplot/gnuplot/5.2.5/gnuplot-5.2.5.tar.gz tar xzvf gnuplot-5.2.5.tar.gz cd gnuplot-5.2.5/ ./configure --prefix=/public/home/zjb/app/gunplot/ make & make install 第五行等号后面是你的目标安装路径 "},"02-install/linux-python-for-nonRoot.html":{"url":"02-install/linux-python-for-nonRoot.html","title":"为非ROOT用户安装Python3","keywords":"","body":"还没写 主要是一般也用不到，集群装了2了已经。 网上也一大堆教程，跟着 linux-install-app-for-nonRoot.md 也是可以。 "},"02-Install/linux-lrzsz-install.html":{"url":"02-Install/linux-lrzsz-install.html","title":"Irzsz","keywords":"","body":"为linux非ROOT用户安装lrzsz lrzsz是一款在linux里可代替FTP上传和下载的程序。可以实现在linux中支持直接拖拽上传；同时也支持rz和sz命令进行上传和下载。 如果拥有ROOT权限，可以直接执行下述代码安装： $ yum -y install lrzsz 而如果没有ROOT权限，是无法写入的，就需要我们自行编译。下面是普通用户安装的办法。 下载并解压 $ cd /tmp $ wget http://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz $ tar -zxvf lrzsz-0.12.20.tar.gz && cd lrzsz-0.12.20 配置安装路径 # 在等号后写入目标安装路径 ./configure --prefix=/public/home/zjb/app/lrzsz 编译安装 $ make && make install 配置当前用户下的系统命令 $ cd /public/home/zjb/app/lrzsz $ mkdir bash-command $ cd bash-command $ ln -s /public/home/zjb/app/lrzsz/bin/lrz rz $ ln -s /public/home/zjb/app/lrzsz/bin/lsz sz 配置当前用户的环境变量 $ cd ~ $ vi .bash_profile # 在PATH列表中添加如下： export PATH=\"/public/home/zjb/app/lrzsz/bash-command\":$PATH $ source .bash_profile 使用方法 上传（rz） $ rz 上传可以直接拖动，上传文件至当前目录； 同时也可以命令：输入rz回车后，会出现文件选择对话框，选择需要上传文件，一次可以指定多个文件，上传到服务器的路径为当前执行rz命令的目录 下载（sz） #下载一个文件 $ sz filename #下载多个文件 $ sz filename1 filename2 #下载dir目录下所有文件，不包含dir下的文件夹 $ sz dir/* "},"02-Install/linux-install-app-for-nonRoot.html":{"url":"02-Install/linux-install-app-for-nonRoot.html","title":"linux为非ROOT用户安装应用程序","keywords":"","body":"参考：linux非root用户安装软件入门 | tlanyan.me . 下为上文的备份。 下面是Linux下非root用户安装软件的一般流程： 获取源代码；常用wget/curl下载，也可以用类似apt-get source的方式获取仓库中软件源代码； 解压源代码安装包；例如对于gzip格式的tar包：tar -zxvf xxx.tar.gz； 切换到解压后的目录，运行 ./configure;./configure --help可以列出配置项，非root用户最重要的配置项是安装目录prefix，例如 ./configure --prefix=/path/to/bin。在无法自动找到依赖库位置的情况下，用 --with-xx-dir=xxx 的形式配置依赖库位置； 编译源代码并复制可执行文件到指定的安装目录： make && make install。这两条命令可以分开执行，make时指定 -j 参数并行编译，能显著减少编译耗时（单进程编译GCC需要几个小时，开启并行编译后可缩短到十几分钟）； 使用export PATH=/path/to/bin:$PATH更新PATH变量。命令行窗口运行此命令只对本次会话中有效，可将其写到.bashrc或者.bash_profile中； 如果安装的是动态链接库，则需要更新动态链接库路径： export LD_LIBRARY_PATH=/path/to/library:$LD_LIBRARY_PATH。最好将此命令写在.bashrc文件中，用户下次打开会话时自动执行。 从windows转移到Linux的用户刚开始会有各种不适，因使用习惯水土不服而放弃Linux的不在少数。还没有领略到Linux的美好就退却，对于这类人只能说可惜。还有部分人在个人电脑上用Linux，总体感觉还不错；切换到工作时只能使用无特权的普通账户，会遇到“没root权限 -> 出现问题 -> 找答案 -> 提示用root”的死循环，于是感到沮丧和抓狂。本文主要面向对象第二类人，简要介绍没有root权限时，安装软件的步骤和操作。 许多人都非常熟悉Windows，毫无疑问windows是目前桌面操作系统的王者。随着高富帅和土豪种群的增长，Mac OS的份额也逐步提升。无论是windows还是Mac OS，用户接触的都是图形界面（Graphical User Interface，GUI）。转向Linux之后，大部分人会优先使用带图形界面的系统作为过渡。比如本人最开始使用Ubuntu，熟悉后才慢慢转向CentOS和Fedora。许多优秀的Linux桌面图形发行版，如Debian/Ubuntu/Mint，Fedora，OpenSUSE等，图形界面华美，桌面体验良好，可以给Windows用户很好的过渡。这些Linux系统基本都开源且可免费使用（支持服务可能要付费），是Linux入门级操作系统的首选。 Windows上安装软件相当傻瓜化，下载exe后双击运行，点击鼠标一直next就完事。安装过程中，小白用户一般不会看引导页面种的内容（估计字都认识，连在一块不知道什么意思），附带安装其他软件或者对系统做了额外改动也毫不知情。当有人（一般是女生）说电脑开机后反应很慢/失去响应，过去一看电脑上瑞星、360、金山毒霸、腾讯安全管家等各种软件都在右下角托盘刷着存在感。对于这种情形，只能表示理解，进入安全模式把不用的软件都卸载掉，电脑基本上就正常了。 回到Linux安装软件，情况稍有不同。首先是软件一般从软件仓库中获取，即现在熟悉的应用市场；再次基本上用命令行安装软件，不是双击安装包（Mac OS可以这样做）。所以熟悉命令行安装软件，是迈向Linux世界基础的一步。幸运的是linux上又apt/yum/dnf等简单好用的软件包管理工具，能自动解决软件包之间的依赖问题，让用户一行命令就获取到所需软件。例如安装g++，执行sudo apt-get install g++、sudo yum install -y gcc-c++即可。 然而有些软件是有源代码，因为版权、无人维护等原因不在软件仓库中，apt-get/yum/dnf的安装方式就行不通，只能从源码编译。这便需要先下载源代码，解压（大多数不能点右键解压），然后按照说明文档make && make install。不管是从软件仓库，还是手工编译源代码的方式，对有root权限的用户问题都不大。倒霉的是没有root权限，还不得不安装某些软件才能正常工作的普通账号。这些普通账号需要额外的软件或依赖库时，该如何自救解脱？ 因为无法安装的原因是权限限制，故而有必要先了解一下Linux中文件和用户的权限。对任意一个文件（Linux下一切皆文件，包括目录、CPU内存等设备），可以使用ls -l查看其权限。命令的每行首列输出类似(d|-)rwxrwxrwx，这就是文件的权限标志。第一个字母是文件类型，d表示目录,-表示普通文件,s套接字，l链接文件，等等；接下来有9列，每3列一组，总共3组，对应文件属主(owner)、属主组员(group)和其他用户(other)对该文件的权限。每组的标志类似rwx。rwx是读(read)，写(write)和执行(execute)三种权限的缩写。如果没有某种权限，对应标志位是-。例如某个文件foo.txt，只有属主可读写，其权限标志就是：-rw-------。注意，非root用户下，文件夹必须要有执行（x）权限才能进入。 再看用户的权限。root用户是bug，电脑上所有的文件都是它的，权限位设置对其无效。非root用户默认 只对家目录有完全的控制权限，对/tmp目录有读写的权限。/tmp目录如其名，应该只在其中存放临时性文件，该目录在系统重启时会被清空。/var、/usr、/bin、/opt等常见文件夹及子目录，几乎所有用户都能访问其中的文件和内容，执行可执行程序，但只有root用户和属主有写入的权限。 了解完权限，再看普通账户安装软件困难的原因。大部分软件默认安装路径是 /usr/bin 或 /usr/local/bin，安装时需要将可执行文件复制到这些目录下。普通用户没有目录的写权限，于是提示无权限导致安装失败。切换到root模式后，一切又都好使了。根据普通账号的权限，可以得出结论：非root用户，（几乎）只能安装软件到家目录下。 "},"03-Linux/linux-README.html":{"url":"03-Linux/linux-README.html","title":"Linux","keywords":"","body":"linux 没啥好写的，不就是个系统，区别于Windows、MacOs嘛。 一些非初级非高级玩法 Linux为非ROOT用户安装应用程序 "},"03-Linux/linux-command.html":{"url":"03-Linux/linux-command.html","title":"Linux 常用命令","keywords":"","body":"Linux常用命令 命令 说明 cd 切换目录 ls 列出文件和目录 ll 同上 mkdir 新建文件夹 cp 复制 mv 移动 rm 删除文件 rmdir 删除目录 pwd 当前目录 cat 预览 tar 压缩/解压缩 cd：Change Directory 切换当前目录，可以是绝对路径，也可以是相对路径。如： cd /root/Docements # 切换到目录/root/Docements cd ./path # 切换到当前目录下的path目录中，“.”表示当前目录 cd ../path # 切换到上层目录中的path目录中，“..”表示上一层目录 ls与ll：list ls：查看文件与目录，参数如下 -l ：列出长数据串，包含文件的属性与权限数据等 -a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用） -d ：仅列出目录本身，而不是列出目录的文件数据 -h ：将文件容量以较易读的方式（GB，kB等）列出来 -R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来 值得一提的是-l参数，它可以用ll来简化，如下例： [zjb@op app]$ ls get-pip.py pot_database python38 Python-3.8.5 scripts tgz_backup vaspkit.1.12 vtstscripts-933 [zjb@op app]$ ls -l total 1875 -rw-r--r-- 1 zjb energy 1886796 Oct 18 06:00 get-pip.py drwxr-xr-x 4 zjb energy 4096 Dec 1 2018 pot_database drwxr-xr-x 6 zjb energy 4096 Oct 29 14:59 python38 drwxr-xr-x 18 zjb energy 4096 Oct 29 14:57 Python-3.8.5 drwxr-xr-x 2 zjb energy 4096 Oct 29 15:11 scripts drwxr-xr-x 2 zjb energy 4096 Oct 31 17:48 tgz_backup drwxr-xr-x 7 zjb energy 4096 Oct 9 16:50 vaspkit.1.12 drwxr-xr-x 5 zjb energy 8192 Dec 28 2017 vtstscripts-933 [zjb@op app]$ ll total 1875 -rw-r--r-- 1 zjb energy 1886796 Oct 18 06:00 get-pip.py drwxr-xr-x 4 zjb energy 4096 Dec 1 2018 pot_database drwxr-xr-x 6 zjb energy 4096 Oct 29 14:59 python38 drwxr-xr-x 18 zjb energy 4096 Oct 29 14:57 Python-3.8.5 drwxr-xr-x 2 zjb energy 4096 Oct 29 15:11 scripts drwxr-xr-x 2 zjb energy 4096 Oct 31 17:48 tgz_backup drwxr-xr-x 7 zjb energy 4096 Oct 9 16:50 vaspkit.1.12 drwxr-xr-x 5 zjb energy 8192 Dec 28 2017 vtstscripts-933 mkdir：Make Directory 创建文件夹 mkdir 例 行9 [zjb@op ~]$ ll total 21 drwxr-xr-x 9 zjb energy 4096 Oct 29 15:10 app drwxr-xr-x 2 zjb energy 4096 Oct 31 19:45 backup drwxr-xr-x 2 zjb energy 4096 Oct 31 21:03 NaCl drwxr-xr-x 2 zjb energy 4096 Oct 25 22:43 O2_opt drwxr-xr-x 6 zjb energy 4096 Oct 31 20:07 test -rw-r--r-- 1 zjb energy 1288 Oct 31 17:53 vasp.pbs [zjb@op ~]$ mkdir hahahahahahahha [zjb@op ~]$ ll total 25 drwxr-xr-x 9 zjb energy 4096 Oct 29 15:10 app drwxr-xr-x 2 zjb energy 4096 Oct 31 19:45 backup drwxr-xr-x 2 zjb energy 4096 Oct 31 21:33 hahahahahahahha drwxr-xr-x 2 zjb energy 4096 Oct 31 21:03 NaCl drwxr-xr-x 2 zjb energy 4096 Oct 25 22:43 O2_opt drwxr-xr-x 6 zjb energy 4096 Oct 31 20:07 test -rw-r--r-- 1 zjb energy 1288 Oct 31 17:53 vasp.pbs cp：Copy 复制文件（夹），copy之意，它还可以把多个文件一次性地复制到一个目录下， 它的常用参数如下： -a ：将文件的特性一起复制 -p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份 -i ：若目标文件已经存在时，在覆盖时会先询问操作的进行 -r ：递归持续复制，用于目录的复制行为 -u ：目标文件与源文件有差异时才会复制 例如 ： cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2 cp file1 file2 file3 dir/ #把文件file1、file2、file3复制到目录dir中 mv：Move 该命令用于移动文件、目录或更名，move之意，它的常用参数如下： -f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖 -i ：若目标文件已经存在，就会询问是否覆盖 -u ：若目标文件已经存在，且比目标文件新，才会更新 注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。 例如： mv file1 file2 file3 dir/ # 把文件file1、file2、file3移动到目录dir中 mv file1 file2 # 把文件file1重命名为file2 rm：Remove 该命令用于删除文件或目录，remove，它的常用参数如下： -f ：就是force的意思，忽略不存在的文件，不会出现警告消息 -i ：互动模式，在删除前会询问用户是否操作 -r ：递归删除，最常用于目录删除，它是一个非常危险的参数 [zjb@op ~]$ ll total 25 drwxr-xr-x 9 zjb energy 4096 Oct 29 15:10 app drwxr-xr-x 2 zjb energy 4096 Oct 31 19:45 backup drwxr-xr-x 2 zjb energy 4096 Oct 31 21:33 hahahahahahahha drwxr-xr-x 2 zjb energy 4096 Oct 31 21:03 NaCl drwxr-xr-x 2 zjb energy 4096 Oct 25 22:43 O2_opt drwxr-xr-x 6 zjb energy 4096 Oct 31 20:07 test -rw-r--r-- 1 zjb energy 1288 Oct 31 17:53 vasp.pbs [zjb@op ~]$ rm -r hahahahahahahha/ [zjb@op ~]$ ll total 21 drwxr-xr-x 9 zjb energy 4096 Oct 29 15:10 app drwxr-xr-x 2 zjb energy 4096 Oct 31 19:45 backup drwxr-xr-x 2 zjb energy 4096 Oct 31 21:03 NaCl drwxr-xr-x 2 zjb energy 4096 Oct 25 22:43 O2_opt drwxr-xr-x 6 zjb energy 4096 Oct 31 20:07 test -rw-r--r-- 1 zjb energy 1288 Oct 31 17:53 vasp.pbs rmdir ：Remove Directory 删除指定目录。要么用rm -r 要么用rmdir 。更建议用rmdir。 pwd ：Print Working Directory 打印当前工作路径。绝对路径。 [zjb@op utilities]$ pwd /public/home/zjb/app/vaspkit.1.12/utilities cat：concatenate and print files 该命令用于查看文本文件的内容，后接要查看的文件名。通常可用管道与more和less一起使用，从而可以一页页地查看数据。 [zjb@op utilities]$ cat hello.sh #!/bin/bash echo \"I love you\" [zjb@op utilities]$ tar 该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下： -c ：新建打包文件 -t ：查看打包文件的内容含有哪些文件名 -x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中 -j ：通过bzip2的支持进行压缩/解压缩 -z ：通过gzip的支持进行压缩/解压缩 -v ：在压缩/解压缩过程中，将正在处理的文件名显示出来 -f filename ：filename为要处理的文件 -C dir ：指定压缩/解压缩的目录dir 上面的解说可以已经让你晕过去了，但是通常我们只需要记住下面三条命令即可： 压缩：tar -zcvf filename.tar.gz 要被处理的文件或目录名称 查询：tar -tvf filename.tar 解压：tar -zxvf filename.tar.gz 注：文件名并不定要以后缀tar.gz结尾，这里主要是为了说明使用的压缩程序为gzip。后缀也可是.tar，.tar.bz2。 其实掌握上面那些就够了。 grep命令 该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为 grep [-acinv] [--color=auto] '查找字符串' filename 它的常用参数如下： -a ：将binary文件以text文件的方式查找数据 -c ：计算找到‘查找字符串’的次数 -i ：忽略大小写的区别，即把大小写视为相同 -v ：反向选择，即显示出没有‘查找字符串’内容的那一行 # 例如： # 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色 grep --color=auto 'MANPATH' /etc/man.config # 把ls -l的输出中包含字母file（不区分大小写）的内容输出 ls -l | grep -i file find命令 find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下： find [PATH] [option] [action] # 与时间有关的参数： -mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件； -mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名； -mtime -n : 列出在n天之内（含n天本身）被更改过的文件名； -newer file : 列出比file还要新的文件名 # 例如： find /root -mtime 0 # 在当前目录下查找今天之内有改动的文件 # 与用户或用户组名有关的参数： -user name : 列出文件所有者为name的文件 -group name : 列出文件所属用户组为name的文件 -uid n : 列出文件所有者为用户ID为n的文件 -gid n : 列出文件所属用户组为用户组ID为n的文件 # 例如： find /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件 # 与文件权限及名称有关的参数： -name filename ：找出文件名为filename的文件 -size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件 -tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、 目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）； -perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755； -perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示 -perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示 # 例如： find / -name passwd # 查找文件名为passwd的文件 find . -perm 0755 # 查找当前目录中文件权限的0755的文件 find . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte ps命令 该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下： -A ：所有的进程均显示出来 -a ：不与terminal有关的所有进程 -u ：有效用户的相关进程 -x ：一般与a参数一起使用，可列出较完整的信息 -l ：较长，较详细地将PID的信息列出 其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下： ps aux # 查看系统所有的进程数据 ps ax # 查看不与terminal有关的所有进程 ps -lA # 查看系统所有的进程数据 ps axjf # 查看连同一部分进程树状态 kill命令 该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下： kill -signal PID signal的常用参数如下： 注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。 1：SIGHUP，启动被终止的进程 2：SIGINT，相当于输入ctrl+c，中断一个程序的进行 9：SIGKILL，强制中断一个进程的进行 15：SIGTERM，以正常的结束进程方式来终止进程 17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行 例如： # 以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程 kill -SIGTERM %1 # 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得 kill -SIGHUP PID killall命令 该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下： killall [-iIe] [command name] 它的参数如下： -i ：交互式的意思，若需要删除时，会询问用户 -e ：表示后面接的command name要一致，但command name不能超过15个字符 -I ：命令名称忽略大小写 # 例如： killall -SIGHUP syslogd # 重新启动syslogd file命令 该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下： file filename #例如： file ./test chgrp命令 该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下： chgrp [-R] dirname/filename -R ：进行递归的持续对所有文件和子目录更改 # 例如： chgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users chown命令 该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。 chmod命令 该命令用于改变文件的权限，一般的用法如下： chmod [-R] xyz 文件或目录 -R：进行递归的持续更改，即连同子目录下的所有文件都会更改 同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、=（设置）跟rwx搭配来对文件的权限进行更改。 # 例如： chmod 0755 file # 把file的文件权限改变为-rxwr-xr-x chmod g+w file # 向file的文件权限中加入用户组可写权限 gcc命令 对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下： -o ：output之意，用于指定生成一个可执行文件的文件名 -c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序 -I ：增加编译时搜索头文件的路径 -L ：增加编译时搜索静态连接库的路径 -S ：把源文件生成汇编代码文件 -lm：表示标准库的目录中名为libm.a的函数库 -lpthread ：连接NPTL实现的线程库 -std= ：用于指定把使用的C语言的版本 # 例如： # 把源文件test.c按照c99标准编译成可执行程序test gcc -o test test.c -lm -std=c99 #把源文件test.c转换为相应的汇编程序源文件test.s gcc -S test.c time命令 该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如： time ./process time ps aux 在程序或命令运行结束后，在最后输出了三个时间，它们分别是： user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和； system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和； real：实际时间，从command命令行开始执行到运行终止的消逝时间； 注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。 "},"03-Linux/linux-vi.html":{"url":"03-Linux/linux-vi.html","title":"VI/VIM 编辑器","keywords":"","body":"vi / vim 编辑器 vi编辑器是Linux系统下标准的编辑器，这玩意有些简单，虽然命令很多，不过练练就好，懒得写了，参考Linux vi/vim | 菜鸟教程吧。 "},"03-Linux/linux-lrzsz-usage.html":{"url":"03-Linux/linux-lrzsz-usage.html","title":"lrzsz的使用","keywords":"","body":"使用方法 上传（rz） $ rz 上传可以直接拖动，上传文件至当前目录； 同时也可以命令：输入rz回车后，会出现文件选择对话框，选择需要上传文件，一次可以指定多个文件，上传到服务器的路径为当前执行rz命令的目录 下载（sz） #下载一个文件 $ sz filename #下载多个文件 $ sz filename1 filename2 #下载dir目录下所有文件，不包含dir下的文件夹 $ sz dir/* "},"03-Linux/linux-bashrc-VS-bash_profile.html":{"url":"03-Linux/linux-bashrc-VS-bash_profile.html","title":".bashrc与.bash_profile的区别","keywords":"","body":"linux中 .bashrc 与 .bash_profile 的区别 具体参考 关于“.bash_profile”和“.bashrc”区别的总结 | CSDN 。 由此可见，“profile”系列文件的主要目的在于为“登录shell”设置环境变量和启动程序；而“rc”系列文件的主要目的在于设置功能和别名。 顺便提一句，Linux中“rc”是英文“run command”的缩写，表示文件中存放需要执行的命令。其实这也非常符合逻辑，设置功能就要执行shopt命令，而设置别名要执行alias命令。与“rc”系列互补，“profile”系列用来设置环境变量，它不会去调用这两个命令，但却经常需要使用export语句。不信你可以看一看这两个文件。 如果你想对bash的功能进行设置或者是定义一些别名，推荐你修改~/.bashrc文件，这样无论你以何种方式打开shell，你的配置都会生效。而如果你要更改一些环境变量，推荐你修改~/.bash_profile文件，因为考虑到shell的继承特性，这些更改确实只应该被执行一次（而不是多次）。针对所有用户进行全局设置，推荐你在/etc/profile.d目录下添加以.sh结尾的文件，而不是去修改全局startup文件。 "},"03-Linux/PBS-README.html":{"url":"03-Linux/PBS-README.html","title":"PBS 作业管理系统","keywords":"","body":"作业一般会提交到超算集群上进行计算。在集群上，一般不能随意地直接以 mpirun 运行我们的并行计算程序，而必须通过其上提供的作业管理系统来提交计算任务。集群作业管理系统可以根据用户的需求，统一管理和调度集群的软硬件资源，保证用户作业公平合理地共享集群资源，提高系统利用率和吞吐率。 PBS就是其中一种解决方案，作业通过PBS命令提交到PBS队列中，然后经由PBS分配资源运行。 "},"03-Linux/PBS-commend.html":{"url":"03-Linux/PBS-commend.html","title":"管理作业","keywords":"","body":"使用PBS管理作业的几种命令 提交作业 用以下命令提交作业： $ qsub [options] 命令执行后会返回一个作业ID。如： [zjb@op back]$ qsub -N thisIsName vasp.pbs 201848.inode202 作业提交后一般会先排队等待，PBS 系统会根据作业的优先级和可用的计算资源来调度和执行作业。 其中-N thisIsName为选项，它指定了作业的名称。vasp.pbs为PBS脚本，它设定了作业的属性和作业的内容。options与control script详见 ## PBS脚本。 文档中，命令带有$符号的，表示是在shell终端输入的命令，实际输入的时候不需要带有这个符号。 查看任务 $ qstat [option] 如： [zjb@op back]$ qstat Job ID Name User Time Use S Queue ------------------------- ---------------- --------------- -------- - ----- 201848.inode202 thisIsName zjb 00:00:00 C energy 其中，S表示任务的状态，有如下几种状态： 状态(S) 描述 B 只用于任务向量，表示任务向量已经开始执行 E 任务在运行后退出 H 任务被服务器或用户或者管理员阻塞 Q 任务正在排队中，等待被调度运行 R 任务正在运行 C 任务完成 S 任务被服务器挂起，由于一个更高优先级的任务需要当前任务的资源 T 任务被转移到其它执行节点了 U 由于服务器繁忙，任务被挂起 W 任务在等待它所请求的执行时间的到来(qsub -a) X 只用于子任务，表示子任务完成 qstat 的选项 命令 说明 qstat -q 列出所有队列 qstat -a 列出所有作业 qstat -u user_id 列出user_id的所有作业 qstat -r 列出所有正在运行的作业 qstat -f job_id 列出作业job_id的信息 qstat -fQ queue 列出队列queue的信息 qstat -B 列出所有作业状态的汇总 pbsnodes 列出所有节点的详细信息 pestat 列出所有节点的状态 取消任务 $ qdel 停止正在运行的任务 $ qsig -s KILL checkjob $ checkjob 注意这儿的job id不包括.inodexxx，比如上述的201848.inode202作业，如果使用checkjob查询，命令应为checkjob 201848。 [zjb@op testEnergy]$ checkjob 201848 checking job 201848 State: Running Creds: user:zjb group:energy account:SugonClus class:energy qos:preemptee WallTime: 00:02:03 of 00:30:00 SubmitTime: Sat Oct 31 19:45:48 (Time Queued Total: 00:00:01 Eligible: 00:00:01) StartTime: Sat Oct 31 19:45:49 Total Tasks: 4 Req[0] TaskCount: 4 Partition: DEFAULT Network: [NONE] Memory >= 0 Disk >= 0 Swap >= 0 Opsys: [NONE] Arch: [NONE] Features: [NONE] Allocated Nodes: [inode53:4] IWD: [NONE] Executable: [NONE] Bypass: 0 StartCount: 1 PartitionMask: [ALL] Flags: BACKFILL RESTARTABLE PREEMPTEE Attr: PREEMPTEE Reservation '201868' (-00:02:04 -> 00:27:56 Duration: 00:30:00) PE: 4.00 StartPriority: 6000 如果任务无法运行，可以这样查询原因。 pbsnodes 查看节点的空闲情况。有free、busy、down等状态。 "},"03-Linux/PBS-script.html":{"url":"03-Linux/PBS-script.html","title":"PBS 脚本","keywords":"","body":"PBS脚本 PBS脚本实际上是一个linux shell脚本，在 PBS 脚本中可以用一种特殊形式的注释（#PBS）作为 PBS 指令以设定作业属性。下面是一个 PBS 脚本示例： #!/bin/sh #PBS -N Untitled #PBS -l nodes=1:ppn=4 #PBS -l walltime=00:10:00 #PBS -j oe #PBS -o ./out.log cd ${PBS_O_WORKDIR} source /public/software/profile.d/compiler_intel-composer_xe_2015.2.164.sh source /public/software/profile.d/mpi_intelmpi-5.0.2.044.sh echo \"=============================================\" echo \"Starting VASP run at\" `date` echo \"=============================================\" echo \"# SYSTEM INFO\" echo 'The hostname is ' `hostname` grep 'Linux' /etc/issue grep 'model name' /proc/cpuinfo |cut -d: -f2 |uniq -c grep 'cpu M' /proc/cpuinfo grep 'MemTotal' /proc/meminfo echo \"=============================================\" echo \"# PBS INFO\" echo \"The PBS_O_WORKDIR is\" $PBS_O_WORKDIR echo \"The PBS_JOBID is\" $PBS_JOBID echo \"The PBS_O_QUEUE is\" $PBS_O_QUEUE echo \"The PBS_O_HOST is\" $PBS_O_HOST NP=`cat $PBS_NODEFILE | wc -l` echo \"The num of PBS_NODEFILE is\" $NP echo \"The PBS_NODEFILE IS:\" cat $PBS_NODEFILE mpirun -np $NP -machinefile $PBS_NODEFILE /public/software//apps/vasp/5.4.1/intelmpi/vasp_std >& stdout echo \"=============================================\" echo \"End task at \" `date` echo \"=============================================\" PBS作业属性 属性 取值 说明 -l 资源列表 设定作业所需资源，以逗号分隔 -N 作业名称 设定作业的默认名称 -o 文件路径 设定作业的标准输出文件路径 -e 文件路径 设定作业的标准错误文件路径 -j oe或eo oe:将标准错误文件与标准输出文件合并成标准输出文件。eo:将标准错误文件和标准输出文件合并成标准错误文件 -p -1024 到 +1023 之间的整数 设定作业优先级，越大优先级越高 -q 队列名称 设定作业队列名称 资源列表 资源 取值 说明 nodes 节点资源构型 设定作业所需计算节点资源 walltime hh:mm:ss 设定作业所需的最大 wallclock 时间 cput hh:mm:ss 设定作业所需的最大 CPU 时间 mem 正整数，后面可跟 b，kb，mb，gb 设定作业所需的最大内存 ncpus 正整数 设定作业所需的 CPU 数目 PBS常用环境变量 环境变量 说明 PBS_ENVIRONMENT 批处理作业为 PBS_BATCH，交互式作业为 PBS_INTERACTIVE PBS_JOBID PBS 系统给作业分配的标识号 PBS_JOBNAME 用户指定的作业名称 PBS_NODEFILE 包含作业所用计算节点的文件名 PBS_QUEUE 作业所执行的队列名称 PBS_O_HOME 执行 qsub 命令的 HOME 环境变量值 PBS_O_PATH 执行 qsub 命令的 PATH 环境变量值 PBS_O_SHELL 执行 qsub 命令的 SHELL 环境变量值 PBS_O_HOST 执行 qsub 命令节点名称 PBS_O_QUEUE 提交的作业的最初队列名称 PBS_O_WORKDIR 执行 qsub 命令所在的绝对路径 "},"04-Materials-Studio/About.html":{"url":"04-Materials-Studio/About.html","title":"关于Material Studio","keywords":"","body":"Materials Studio 懒得写了的 界面各部分介绍 "},"04-Materials-Studio/unfinished.html":{"url":"04-Materials-Studio/unfinished.html","title":"栗子：建立Au的111切面的4×4超胞","keywords":"","body":"还没写 "},"05-VASP/VASP-and-VASPKIT.html":{"url":"05-VASP/VASP-and-VASPKIT.html","title":"VASP与VASPKIT","keywords":"","body":"VASP的全称Vienna Ab-initio Simulation Package，是维也纳大学Hafner小组开发的进行电子结构计算和量子力学-分子动力学模拟软件包。 vaspkit是一款VASP预-后数据处理脚本。 最新版的vaspkit是王伟老师、许楠、刘锦程，唐刚，李强和乐平共同努力的成果。 因此我们需要区分开VASP和VASPKIT。VASP是一款计算模拟软件，而VASPKIT仅是为方便使用VASP而开发的一个脚本包。也即，如果不用VASPKIT，你仍然可以使用VASP进行计算，无非麻烦一些罢了。 我们接下来操作的都是VASPKIT，而VASP不需要我们自己安装，因为集群的管理员已经为我们安装好了。 VASPKIT官网：https://vaspkit.com/index.html 官网已经详细的列出了VASPKIT如何配置安装，如何开始使用。由于课程需要，实际使用与官方文档的描述有一丁点区别，本文档仅对本人使用过程做记录。 "},"05-VASP/install-vaspkit.html":{"url":"05-VASP/install-vaspkit.html","title":"安装VASPKIT","keywords":"","body":"VASPKIT的配置 推荐视频 VASPKIT功能介绍，解放你的双手 ： 我们预计将VASPKIT安装在~/app/下，在用户目录下新建一个app文件夹并进入： cd ~ mkdir app cd app 下载 你可以将其下载到自己的电脑上后再上传到服务器，也可以直接在服务器上下载。以下两种下载方式二选一即可。 方式一（Recommend） # VASPKIT软件的包 $ wget https://nchc.dl.sourceforge.net/project/vaspkit/Binaries/vaspkit.1.2.1.linux.x64.tar.gz # 赝势文件的包 $ wget https://github.com/northword/Computation-Simulation/raw/main/app/pot.tgz 下载成功即如图： 方式二 官方下载地址：https://sourceforge.net/projects/vaspkit/files/Binaries/ 下载后使用FTP上传到服务器。 解压缩 tar -xzvf vaspkit.1.2.1.linux.x64.tar.gz tar -xzvf pot.tgz rm vaspkit.1.2.1.linux.x64.tar.gz pot.tar vtstscripts.tar tar命令用法见 linux-command.md 配置VASPKIT程序的环境变量 首先配置VASPKIT软件的变量。将软件自带的环境变量模板文件复制到用户目录，并编辑 cp -f how_to_set_environment_variable ~/.vaspkit vi ~/.vaspkit 打开后如下： # cp how_to_set_environment_variable ~/.vaspkit and modify the ~/.vaspkit file based on your settings! VASP5 .TRUE. # .TRUE. or .FALSE.; Set .FALSE. if you are using vasp.4.x LDA_PATH ~/POTCAR/LDA # Path of LDA potential. PBE_PATH ~/POTCAR/PBE # Path of PBE potential. GGA_PATH ~/POTCAR/GGA # Path of PW91 potential. POTCAR_TYPE PBE # PBE, PW91 or LDA; Set PBE if you want to make PBE-POTCAR file GW_POTCAR .FALSE. # .TRUE. or .FALSE.; For example, H_GW, O_GW will be chose when POTCAR_GW = .TRUE. RECOMMENDED_POTCAR .TRUE. # .TRUE. or .FALSE.; The recommended PAW potential will be chose when RECOMMENDED_POTCAR = .TRUE. SET_FERMI_ENERGY_ZERO .TRUE. # .TRUE. or .FALSE.; The Fermi Energy will be set to zero eV when SET_FERMI_ENERGY_ZERO = .TRUE. MINI_INCAR .FALSE. # .TRUE. or .FALSE.; A simplified INCAR will be written when MINI_INCAR = .TRUE. USER_DEFINED_INCAR .FALSE. # .TRUE. or .FALSE.; whether to use embedded INCAR templates or user defined INCAR templates WRITE_SELECTIVE_DYNAMICS .FALSE. # .TRUE. or .FALSE.; whether the selective dymanics set will be forced to write when SET_SELECTIVE_DYNAMICS_MODE = .FALSE. PYTHON_BIN ~/anaconda3/bin/python3 # Python executable program with its installation path. I recommend you install anaconda package for Python data science PLOT_MATPLOTLIB .FALSE. # .TRUE. or .FALSE.; Set .TRUE. if you want to generate Graphs. (Matplotlib and Numpy packages MUST be embedded in Python) VASPKIT_UTILITIES_PATH ~/vaspkit/utilities # IF ADVANCED_USER is .TRUE., set VASPKIT_UTILITIES_PATH like ~/vaspkit.0.72/utilities in order to use scripts in it. ADVANCED_USER .TRUE. # .TRUE. or .FALSE.; Please fill in your settings in the block 'USER_DEFINED' if you want vaspkit to integrate your own scripts in the 'UTILITIES' file. SET_INCAR_WRITE_MODE OVERRIDE # OVERRIDE, APPEND, BACK-UP-OLD,BACK-UP-NEW; \"Customize INCAR File\" whether to override existing INCAR/appending existing INCAR/backup existing INCAR to INCAR.old && write into INCAR/write into INCAR.new PHS_CORRECTION .FALSE. # .TRUE. or .FALSE.; whether to make PHS correction during linear optical calculations. More details on this correction are given in Comput. Mater. Sci. 172 (2020) 109315. # Reset the default values of variables in here SYMPREC 1E-5 # Distance tolerance in Cartesian coordinates to find crystal symmetry (default value: 1E-5) EMIN -20.0 # Minimum energy for evaluation of DOS (default value: -20.0 eV) EMAX 20.0 # Maximum energy for evaluation of DOS (default value: 20.0 eV) NEDOS 2001 # Number of grid points in DOS (default value: 2001) GAMMA_CENTERED .TRUE. # .TRUE. or .FALSE.; (default value: .TRUE.) VACUUM_THICKNESS 15.0 # The thickness of vacuum to build slab or 2D materials (default value: 10 angstrom) CENTER_SLAB .TRUE. # Center the slab in the z direction; (default value: .TRUE.) 通常需要修改的是3、4行，将其修改为你的赝势文件的路径，按照本文档操作下来的，应该修改为： LDA_PATH ~/app/pot_database/LDA # Path of LDA potential. PBE_PATH ~/app/pot_database/PBE # Path of PBE potential. 将vaspkit关键字加入系统环境变量 接下来，要把vaspkit这个关键词添加到系统的环境变量里。由于新版本(version>0.73)给了方便的配置脚本，我们直接运行， $ bash setup.sh $ source ~/.bashrc 其中第一行作用为将export PATH=[你的VASPKIT目录]/bin/:$PATH添加到了~/.bashrc，第二行作用为使环境变量立即生效。 当然，也可以去vi ~/.bashrc，将路径添加到PATH。 至此，环境变量配置完成，我们可以通过vaspkit命令来启动它。 [zjb@op backup]$ vaspkit \\\\\\/// / _ _ \\ Hey, you must know what you are doing. (| (.)(.) |) Otherwise you might get wrong results! +-----.OOOo--()--oOOO.------------------------------------------+ | VASPKIT Version: 1.12 (01 Mar. 2020) | | Core Developer: Vei WANG (wangvei@icloud.com) | | Main Contributors: Nan XU, Jin-Cheng LIU & Gang TANG | | Please send Bugs and Suggestions to vaspkit@gmail.com | +-----.oooO-----------------------------------------------------+ ( ) Oooo. \\ ( ( ) \\_) ) / (_/ ===================== Structural Options ======================== 1) VASP Input Files Generator 2) Elastic-Properties 3) K-Path Generator 4) Structure Editor 5) Catalysis-ElectroChem Kit 6) Symmetry Search ===================== Electronic Options ======================== 11) Density-of-States 21) DFT Band-Structure 23) 3D Band-Structure 25) Hybrid-DFT Band-Structure 26) Fermi-Surface 28) Band-Structure Unfolding =========== Charge & Potential & Wavefunction Options =========== 31) Charge & Spin Density 42) Potential-Related 51) Wave-Function Analysis ====================== Misc Utilities =========================== 71) Optical-Properties 72) Molecular-Dynamics Kit 73) VASP2other Interface 74) USER interface 91) Semiconductor Calculator 92) 2D-Materials Kit 0) Quit ------------>> "},"05-VASP/vasp-input-files.html":{"url":"05-VASP/vasp-input-files.html","title":"VASP的输入文件","keywords":"","body":"VASP的输入文件 VASP运行至少包含四个输入文件：INCAR、POSCAR、POTCATR、KPOINTS。 INCAR INCAR 是VASP运行的控制文件，他告诉VASP要做什么以及如何去做。INCAR文件中包含很多标签及其对应的值，通过修改他们来修改VASP运行的参数。 标签的含义可以查 VASP手册 。 POSCAR POSCAR是个结构文件，他告诉VASP要运行的是什么物质。该文件包含晶格几何形状和离子位置等。 这是一个POSCAR文件的示例： O2 molecule # 注释行 10 # 比例，提供了通用缩放因子（晶格常数） 1.0 0.0 0.0 # 3-5行 格矢 0.0 1.0 0.0 0.0 0.0 1.0 O # 元素类别（与它们在POTCAR文件中的顺序一致） 2 # 原子数量 Selective Dynamic # Direct # 坐标类别：直角/笛卡尔 0.5 0.5 0.5 F F F # 每个原子的三个(X Y Z)坐标。 0.5 0.5 0.623 F F T 第8行：该模式允许为每个原子提供额外的标志，以指示在离子弛豫期间是否将允许更改此原子的相应坐标。如果仅缺陷周围的某些壳或表面附近的层应松弛，则此设置很有用。选择性动力学输入标签是可选的，如果省略了选择性动力学标签，则第八行将在笛卡尔和直角坐标之间进行切换，如下。 第9行：（如果不启用选择性动力学，则为第8行）指定原子位置是在笛卡尔坐标系中还是在直角坐标（分别为分数坐标）中提供。仅一行上的第一个字符是有效的，并且VASP识别的唯一关键字符是Corc for cartesian mode，Dordfor direct mode。 O2 molecule # 注释行 10 # 比例，提供了通用缩放因子（晶格常数） 1.0 0.0 0.0 # 3-5行 格矢 0.0 1.0 0.0 0.0 0.0 1.0 O # 元素类别（与它们在POTCAR文件中的顺序一致） 2 # 原子数量 Direct # 坐标类别：直角/笛卡尔 0.5 0.5 0.5 # 每个原子的三个(X Y Z)坐标。 0.5 0.5 0.623 POTCAR 赝势文件。POTCAR文件包含计算中使用的每个原子种类的伪势。如果物种数量大于一个，则按照POSCAR中原子的顺序合并每个物种的POTCAR文件。 KPOINTS K点取样文件。KPOINTS文件用于指定Bloch矢量（k点），这些矢量将用于在计算中对布里渊区进行采样。 可以使用几种不同的方法在KPOINTS文件中指定k点：（1）作为自动生成的（移位的）常规点网格；（2）通过线段的起点和终点；或（ 3）作为点和权重的明确列表。 手册：KPOINTS - Vaspwiki 还有一些其他的文件：Category:Input Files - vaspwiki . "},"05-VASP/vasp-output-files.html":{"url":"05-VASP/vasp-output-files.html","title":"VASP的输出文件","keywords":"","body":"VASP的输出文件 OUTCARR 好多啊，要不查手册吧 Category:Output_Files - vaspwiki "},"05-VASP/gen-input-files.html":{"url":"05-VASP/gen-input-files.html","title":"生成VASP输入文件","keywords":"","body":"准备VASP的输入文件 输入文件包括POSCAR、INCAR、KPOINTS、POTCAR。注意大小写，因为linux是严格区分大小写的系统。 该页以对O2分子进行结构优化为例，说明VASP输入文件的生成步骤。 VASPKIT生成输入文件的选项 可以先看下VASPKIT提供了哪些可以生成输入文件的工具： [zjb@op O2_opt]$ vaspkit \\\\\\/// / _ _ \\ Hey, you must know what you are doing. (| (.)(.) |) Otherwise you might get wrong results! +-----.OOOo--()--oOOO.------------------------------------------+ | VASPKIT Version: 1.12 (01 Mar. 2020) | | Core Developer: Vei WANG (wangvei@icloud.com) | | Main Contributors: Nan XU, Jin-Cheng LIU & Gang TANG | | Please send Bugs and Suggestions to vaspkit@gmail.com | +-----.oooO-----------------------------------------------------+ ( ) Oooo. \\ ( ( ) \\_) ) / (_/ ===================== Structural Options ======================== 1) VASP Input Files Generator 2) Elastic-Properties 3) K-Path Generator 4) Structure Editor 5) Catalysis-ElectroChem Kit 6) Symmetry Search ===================== Electronic Options ======================== 11) Density-of-States 21) DFT Band-Structure 23) 3D Band-Structure 25) Hybrid-DFT Band-Structure 26) Fermi-Surface 28) Band-Structure Unfolding =========== Charge & Potential & Wavefunction Options =========== 31) Charge & Spin Density 42) Potential-Related 51) Wave-Function Analysis ====================== Misc Utilities =========================== 71) Optical-Properties 72) Molecular-Dynamics Kit 73) VASP2other Interface 74) USER interface 91) Semiconductor Calculator 92) 2D-Materials Kit 0) Quit ------------>> 选择1) VASP Input Files Generator ------------>> 1 ==================== VASP Input Files Options =================== 101) Customize INCAR File 102) Generate KPOINTS File for SCF Calculation 103) Generate POTCAR File with Default Setting 104) Generate POTCAR File with User Specified Potential 105) Generate POSCAR File from cif (no fractional occupations) 106) Generate POSCAR File from Material Studio xsd (retain fixes) 107) Reformat POSCAR File in Specified Order of Elements 108) Successive Procedure to Generate VASP Files and Check 109) Check All VASP Files 0) Quit 9) Back ------------>> 上面101-106都可以生成输入文件，然后就可以根据你的需求去选择要生成的文件了。 POSCAR POSCAR文件可以自己写入，也可以通过Materials Studio建模后转换格式，还可以从一些结构网站获取结构。 方法1：通过新建POSCAR文件并手动写入内容来准备 vi POSCAR # 之后手动键入上面POSCAR示例的内容（不包含#后的注释） 方法2：通过Materials Studio建模以生成POSCAR 在MS中建模完成后，有如下几种方式将其转换为POSCAR： 2.1. 使用VASPKIT的cif2pos.py 从MS建模完成后导出为cif文件：file-export，save as type : .cif，上传到服务器上，使用vaspkit-1-105， ------------>> 105 Please type in the filename of cif-> NaCl_import.cif # 在这里输入了.cif文件的文件名 Pleas input the order of element, `ENTER` for default! Example: 'NA CL' in this CIF #在这里需要输入元素的顺序，通常可以按回车使用默认值 -->> (01) POSCAR has been generated... +---------------------------------------------------------------+ | * ACKNOWLEDGMENTS * | | Other Contributors: Xue-Fei LIU, Peng-Fei LIU, Dao-Xiong WU, | | Zhao-Fu ZHANG, Tian WANG, Ya-Chao LIU, Qiang LI, iGo and You! | +---------------------------------------------------------------+ | * CITATIONS * | | We Would Appreciate if You Cite in Your Research with VASPKIT.| | [1] V. Wang, N. Xu, J.C. LIU, G. Tang, et al, VASPKIT: A Pre- | | and Post-Processing Program for VASP Code, arXiv:1908.08269. | +---------------------------------------------------------------+ [zjb@op NaCl]$ 在第4行，会要求你输入.cif文件的文件名。在第7行，会要求你输入元素的种类，如果第6行提示的正确，可以回车使用默认。 2.2. 使用VESTA转换 从MS建模完成后导出为cif文件：file-export-.cif，用VESTA打开该cif文件，选择file-export data，save as : xxx.vasp。将xxx.vasp文件上传到服务器，将其重命名为POSCAR，cp xxx.vasp POSCAR。 2.3. 使用vaspkit的xsd2pos.py 从MS建模完成后导出为xsd文件，上传，使用vaspkit-1）VASP Input Files Generator-106) Generate POSCAR File from Material Studio xsd (retain fixes). 方法3：从结构网站获取 从诸如 Materials Project 等网站获取结构，然后同方法2里的各种转换方法。 INCAR VASPKIT选择101，然后选择INCAR选项，就生成了INCAR文件 ------------>> 101 +-------------------------- Warm Tips --------------------------+ You MUST Know What You Are Doing Some Parameters in INCAR File Neet To Be Set/Adjusted Manually +---------------------------------------------------------------+ ======================== INCAR Options ========================== ST) Static-Calculation SR) Standard Relaxation MG) Magnetic Properties SO) Spin-Orbit Coupling D3) DFT-D3 no-damping Correction H6) HSE06 Calculation PU) DFT+U Calculation MD) Molecular Dynamics GW) GW0 Calculation BS) BSE Calculation DC) Elastic Constant EL) ELF Calculation BD) Bader Charge Analysis OP) Optical Properties EC) Static Dielectric Constant PC) Decomposed Charge Density FD) Phonon-Finite-Displacement DT) Phonon-DFPT NE) Nudged Elastic Band (NEB) DM) The Dimer Method FQ) Frequence Calculations LR) Lattice Relaxation 0) Quit 9) Back ------------>> Input Key-Parameters (STH6D3 means HSE06-D3 Static-Calcualtion) SR INCAR parameters are from user-specified Global. INCAR parameters are from user-specified SR. -->> (01) Written INCAR file! +---------------------------------------------------------------+ | * ACKNOWLEDGMENTS * | | Other Contributors: Xue-Fei LIU, Peng-Fei LIU, Dao-Xiong WU, | | Zhao-Fu ZHANG, Tian WANG, Ya-Chao LIU, Qiang LI, iGo and You! | +---------------------------------------------------------------+ | * CITATIONS * | | We Would Appreciate if You Cite in Your Research with VASPKIT.| | [1] V. Wang, N. Xu, J.C. LIU, G. Tang, et al, VASPKIT: A Pre- | | and Post-Processing Program for VASP Code, arXiv:1908.08269. | +---------------------------------------------------------------+ [zjb@op O2_opt]$ 之后我们打开INCAR进行进一步修改， Global Parameters ISTART = 1 (Read existing wavefunction; if there) # ISPIN = 2 (Spin polarised DFT) # ICHARG = 11 (Non-self-consistent: GGA/LDA band structures) LREAL = Auto (Projection operators: automatic) # ENCUT = 400 (Cut-off energy for plane wave basis set, in eV) PREC = Normal (Precision level) LWAVE = .TRUE. (Write WAVECAR or not；是否写入波函数) LCHARG = .TRUE. (Write CHGCAR or not) ADDGRID= .TRUE. (Increase grid; helps GGA convergence) # LVTOT = .TRUE. (Write total electrostatic potential into LOCPOT or not) # LVHAR = .TRUE. (Write ionic + Hartree electrostatic potential into LOCPOT or not) # NELECT = (No. of electrons: charged cells; be careful) # LPLANE = .TRUE. (Real space distribution; supercells) # NPAR = 4 (Max is no. nodes; don't set for hybrids) # NWRITE = 2 (Medium-level output) # KPAR = 2 (Divides k-grid into separate groups) # NGX = 500 (FFT grid mesh density for nice charge/potential plots) # NGY = 500 (FFT grid mesh density for nice charge/potential plots) # NGZ = 500 (FFT grid mesh density for nice charge/potential plots) ISIF = 2 (Stress/relaxation: 2-Ions, 3-Shape/Ions/V, 4-Shape/Ions) Electronic Relaxation ISMEAR = 0 (Gaussian smearing; metals:1) SIGMA = 0.05 (Smearing value in eV; metals:0.2) NELM = 60 (Max electronic SCF steps) NELMIN = 6 (Min electronic SCF steps) EDIFF = 1E-08 (SCF energy convergence; in eV) # GGA = PS (PBEsol exchange-correlation) Ionic Relaxation NSW = 100 (Max electronic SCF steps) IBRION = 2 (Algorithm: 0-MD; 1-Quasi-New; 2-CG) #ISIF = 2 (Stress/relaxation: 2-Ions, 3-Shape/Ions/V, 4-Shape/Ions) EDIFFG = -2E-02 (Ionic convergence; eV/AA) # ISM = 2 (Symmetry: 0=none; 2=GGA; 3=hybrids) ~ ~ ~ 标签和值如何选择可以查VASP手册呢。 KPOINTS vaspkit-1，然后，102) Generate KPOINTS File for SCF Calculation ------------>> 102 ======================= K-Mesh Scheme ========================== 1) Monkhorst-Pack Scheme 2) Gamma Scheme 0) Quit 9) Back ------------->> 1 # 在这里选择方法 -->> (01) Reading Structural Parameters from POSCAR File... +---------------------------------------------------------------+ | Selective Dynamics is Activated! | +---------------------------------------------------------------+ +-------------------------- Warm Tips --------------------------+ * Accuracy Levels: Gamma-Only: 0; Low: 0.06~0.04; Medium: 0.04~0.03; Fine: 0.02-0.01. * 0.03-0.04 is Generally Precise Enough! +---------------------------------------------------------------+ Input Kmesh-Resolved Value (in unit of 2*PI/Angstrom): ------------>> 0.04 # 在这里输入精度 +-------------------------- Summary ----------------------------+ Reciprocal Lattice Vectors (in unit of 1/angstrom): 0.6283185307 0.0000000000 0.0000000000 0.0000000000 0.5235987756 0.0000000000 0.0000000000 0.0000000000 0.4188790205 Reciprocal Lattice Constants: 0.6283 0.5236 0.4189 Real-Space Lattice Constants: 10.0000 12.0000 15.0000 Size of K-Mesh: 1 1 1 +---------------------------------------------------------------+ -->> (02) Written KPOINTS File! -->> (03) Written POTCAR File with the Recommended Potential! +---------------------------------------------------------------+ | * ACKNOWLEDGMENTS * | | Other Contributors: Xue-Fei LIU, Peng-Fei LIU, Dao-Xiong WU, | | Zhao-Fu ZHANG, Tian WANG, Ya-Chao LIU, Qiang LI, iGo and You! | +---------------------------------------------------------------+ | * CITATIONS * | | We Would Appreciate if You Cite in Your Research with VASPKIT.| | [1] V. Wang, N. Xu, J.C. LIU, G. Tang, et al, VASPKIT: A Pre- | | and Post-Processing Program for VASP Code, arXiv:1908.08269. | +---------------------------------------------------------------+ 通常情况下，生成KPOINTS的同时，会根据推荐赝势生成POTCAR。如果你的没有生成，则进入下一步。 POTCAR vaspkit-1-103。103) Generate POTCAR File with Default Setting 到此为止VASP运行所需要的四个输入文件就全都准备好了，我们就可以提交这个作业了。 将PBS脚本复制到当前目录，然后使用qsub命令提交作业。 qsub -N O2_opt vasp.pbs "},"05-VASP/vasp-geo.html":{"url":"05-VASP/vasp-geo.html","title":"使用VASP进行结构优化","keywords":"","body":"使用VASP进行结构优化 参考 VASP 结构优化、静态自洽、非自洽计算 vasp计算流程-结构优化 【vasp笔记】结构优化（结构弛豫） "},"05-VASP/vasp-neb.html":{"url":"05-VASP/vasp-neb.html","title":"使用VASP NEB方法计算反应路径","keywords":"","body":"使用NEB方法计算反应路径 参考资料 vasp+VTST进行NEB过渡态计算 | cndaqiang vasp-vtst计算过渡态--NEB方法 | 刘锦程 这俩写的挺清楚的，建议直接进去看咯，下为摘抄笔记。 流程 分别对初态和末态进行结构优化 使用脚本生成中间过程图像(结构) NEB计算 处理结果 文件结构： 假设文件目录如下 neb --ini # 作为初态结构优化的目录 ini.xsd --fin # 作为末态结构优化的目录 ini.xsd 这张图整挺好，直接拿过来了，这是原地址 。 分别对初态和末态进行常规的结构优化 上课时的例子是O在N掺杂的石墨烯上的吸附，其中INCAR为 Global Parameters ISTART = 0 (Read existing wavefunction; if there) LREAL = .FALSE. (Projection operators: automatic) ENCUT = 400 (Cut-off energy for plane wave basis set, in eV) PREC = Normal (Precision level) LWAVE = .FALSE. (Write WAVECAR or not) LCHARG = .FALSE. (Write CHGCAR or not) ALGO = Fast Electronic Relaxation ISMEAR = 0 (Gaussian smearing; metals:1) SIGMA = 0.1 (Smearing value in eV; metals:0.2) NELM = 60 (Max electronic SCF steps) NELMIN = 4 (Min electronic SCF steps) EDIFF = 1E-04 (SCF energy convergence; in eV) Ionic Relaxation NSW = 100 (Max electronic SCF steps) IBRION = 2 (Algorithm: 0-MD; 1-Quasi-New; 2-CG) ISIF = 0 (Stress/relaxation: 2-Ions, 3-Shape/Ions/V, 4-Shape/Ions) EDIFFG = -1E-01 (Ionic convergence; eV/AA) POTIM = 0.3 需要注意的是两个POSCAR中，元素顺序必须对应，要不然后面测相似度会出问题，会变得很大。（通过cif2pos和xsd2pos的默认排的顺序不一样哦，已踩坑） 使用脚本处理中间过程 结构优化后，分别将初末态的CONTCAR复制出来作为新的初态和末态 $ cp ini/CONTCAR POSCAR_ini $ cp fin/CONTCAR POSCAR_fin 对初末态测相似度以确定插点数量 $ dist.pl POSCAR_ini POSCAR_fin 若返回值 插点数量通常是相似度/0.8. 插入中间图像 $ nebmake.pl POSCAR_ini POSCAR_fin 3 # 3为插点数量，咱这儿把它记为N filetype1: vasp5 filetype2: vasp5 OK, ALL SETUP HERE FOR LATER ANALYSIS, PUT OUTCARs IN FOLDERS 00 and 04 !!! 提交任务时，CPU需要是插点数量N的整数倍 使用nebmovie查看生成的路线是否合理 $ nebmovie.pl 执行后会生成movie.xyz文件，sz movie.xyz下载，本地终端中使用ase gui 文件路径查看。 分别将初末态的OUTCAR复制到00和N+1文件夹 如果合理，根据nebmake的提示，将OUTCAR放入各自文件夹以便于后续分析。 cp ini/OUTCAR 00/ cp fin/OUTCAR 04/ NEB计算 准备NEB计算的INCAR、POTCAR、KPOINTS POTCAR和KPOINTS不用改直接复制过来就好， INCAR要增加不少东西： 提交计算 注意CPU数量是插点数量N的整数倍 检查结果 检查是否收敛 nebef.pl 返回结果为 序号—最大原子受力 —能量—相对初态的能量. 当所有插点的最大原子受力都 虚频 nebresult.pl总结结果 未完... "},"06-Other App/":{"url":"06-Other App/","title":"高斯","keywords":"","body":"高斯 "},"06-Other App/ASE-usage.html":{"url":"06-Other App/ASE-usage.html","title":"ASE 的使用","keywords":"","body":"ASE GUI的用法 原子模拟环境（Atomic Simulation Environment）（ASE）是一组工具和Python模块，用于设置，操作，运行，可视化和分析原子模拟。 参考文档：https://wiki.fysik.dtu.dk/ase/ase/gui/gui.html?highlight=gui#module-ase.gui "},"09-Others/MS-NoResponse-win2004.html":{"url":"09-Others/MS-NoResponse-win2004.html","title":"MS在win2004一按键盘就假死","keywords":"","body":"Materials Studio在Windows2004及以上假死 一按键盘就卡住，可能是由于新版本的微软拼音导致的，开启微软拼音的兼容模式即可。 "},"09-Others/numpy-in-win20H2.html":{"url":"09-Others/numpy-in-win20H2.html","title":"Windows 20H2下ASE报错","keywords":"","body":"在Windows 20H2上运行ASE报错 ase --version ** On entry to DGEBAL parameter number 3 had an illegal value ** On entry to DGEHRD parameter number 2 had an illegal value ** On entry to DORGHR DORGQR parameter number 2 had an illegal value ** On entry to DHSEQR parameter number 4 had an illegal value Traceback (most recent call last): File \"c:\\users\\northword\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\", line 197, in _run_module_as_main return _run_code(code, main_globals, None, File \"c:\\users\\northword\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\", line 87, in _run_code exec(code, run_globals) File \"C:\\Users\\Northword\\AppData\\Roaming\\Python\\Python39\\Scripts\\ase.exe\\__main__.py\", line 4, in File \"C:\\Users\\Northword\\AppData\\Roaming\\Python\\Python39\\site-packages\\ase\\__init__.py\", line 8, in import numpy as np File \"C:\\Users\\Northword\\AppData\\Roaming\\Python\\Python39\\site-packages\\numpy\\__init__.py\", line 305, in _win_os_check() File \"C:\\Users\\Northword\\AppData\\Roaming\\Python\\Python39\\site-packages\\numpy\\__init__.py\", line 302, in _win_os_check raise RuntimeError(msg.format(__file__)) from None RuntimeError: The current Numpy installation ('C:\\\\Users\\\\Northword\\\\AppData\\\\Roaming\\\\Python\\\\Python39\\\\site-packages\\\\numpy\\\\__init__.py') fails to pass a sanity check due to a bug in the windows runtime. See this issue for more information: https://tinyurl.com/y3dm3h86 搜索到一个类似问题的，是因为numpy与windows 20H2的关系（反正总是Windows 的锅）。 使用如下将numpy降级即可。 pip install numpy==1.19.3 引用地址：https://blog.csdn.net/yangtzech/article/details/109494653 、https://tinyurl.com/y3dm3h86 下为镜像。 numpy sanity check in Windows 2004/20H2 实验室的新电脑到了，所以要重新配置python环境，安装完Python后就开始跑程序了。其中需要用到numpy，安装的最新版本1.19.4，然后运行的时候就出问题了。报错如下： ** On entry to DGEBAL parameter number 3 had an illegal value ** On entry to DGEHRD parameter number 2 had an illegal value ** On entry to DORGHR DORGQR parameter number 2 had an illegal value ** On entry to DHSEQR parameter number 4 had an illegal value File \"c:\\Users\\Public\\OneDrive\\桌面\\LateralControl\\path-following-control\\examples\\pure_pursuit_control.py\", line 5, in from model import particle File \"c:/Users/Public/OneDrive/桌面/LateralControl/path-following-control/examples/..\\model\\particle.py\", line 1, in import numpy as np File \"D:\\ProgramData\\Python\\Python39\\lib\\site-packages\\numpy\\__init__.py\", line 305, in _win_os_check() raise RuntimeError(msg.format(__file__)) from None RuntimeError: The current Numpy installation ('D:\\\\ProgramData\\\\Python\\\\Python39\\\\lib\\\\site-packages\\\\numpy\\\\__init__.py') fails to pass a sanity check due to a bug in the windows runtime. See this issue for more information: https://tinyurl.com/y3dm3h86 Python版本如下： Python 3.9.0 (tags/v3.9.0:9cf6752, Oct 5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32 Windows版本如下： 版本 Windows 10 家庭中文版 版本号 20H2 安装日期 2020/11/2 操作系统版本 19042.610 序列号 S101APL1 体验 Windows Feature Experience Pack 120.2212.31.0 早上打不开报错里面的链接 https://tinyurl.com/y3dm3h86 , 下午又打开了，跳转到https://developercommunity.visualstudio.com/content/problem/1207405/fmod-after-an-update-to-windows-2004-is-causing-a.html ，按照里面的回答 https://developercommunity.visualstudio.com/users/290300/3616d928-e552-6c3c-a305-d773da8af52d.html ，使用pip install numpy==1.19.3将numpy降到1.9.3版本即可解决问题。 按照回答，可能是因为更新了Windows 2004/20H2，所以出了问题。 QAQ：为了这个问题，我装了Anaconda，又是Visual Studio Code、Visual Studio 2019，又是卸载Python3.9，再装上Python3.8，一天的时间就这样过去了…。所有这些原因都是 https://tinyurl.com/y3dm3h86 的链接打不开。然后搜了半天教程，但是没有这样的错误。本来是要用google搜了，当时也刚好上不去。呜呜呜 同步发布于：语雀：https://www.yuque.com/yangtzech/blog/omkav0 "}}